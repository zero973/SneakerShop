// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SneakerShop.DAL.ApplicationContexts;

#nullable disable

namespace SneakerShop.DAL.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("7e7a3229-7eff-49e8-a139-81449e67d951"),
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = new Guid("bb952c11-5eb0-45a1-ae6e-c06b78c60e19"),
                            Name = "Customer",
                            NormalizedName = "CUSTOMER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("SneakerShop.DAL.Models.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("SneakerShop.DAL.Models.Entities.BasketElement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Count")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("DeletedUserId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("DiscountId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("GoodId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActual")
                        .HasColumnType("boolean");

                    b.Property<Guid>("SizeId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("DiscountId");

                    b.HasIndex("GoodId");

                    b.HasIndex("SizeId");

                    b.HasIndex("UserId");

                    b.ToTable("Baskets");
                });

            modelBuilder.Entity("SneakerShop.DAL.Models.Entities.Discount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("DeletedUserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("DiscountTypeId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("GoodId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActual")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("DiscountTypeId");

                    b.HasIndex("GoodId");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("SneakerShop.DAL.Models.Entities.DiscountType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("DeletedUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActual")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Percent")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("DiscountTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("446f36fe-238b-4d7c-9ae0-b3c1eb8e1d21"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 569, DateTimeKind.Local).AddTicks(116),
                            Description = "Обычная летняя скидка",
                            IsActual = true,
                            Name = "Летняя скидка",
                            Percent = 5
                        },
                        new
                        {
                            Id = new Guid("b08f07c3-4610-46ac-913e-b31f2d864dfb"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 569, DateTimeKind.Local).AddTicks(121),
                            Description = "Обычная зимняя скидка",
                            IsActual = true,
                            Name = "Зимняя скидка",
                            Percent = 10
                        },
                        new
                        {
                            Id = new Guid("61e489fa-3877-4d20-a4fc-dad6f31c01cf"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 569, DateTimeKind.Local).AddTicks(122),
                            Description = "Особая скидка",
                            IsActual = true,
                            Name = "Особая скидка",
                            Percent = 50
                        });
                });

            modelBuilder.Entity("SneakerShop.DAL.Models.Entities.Good", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("DeletedUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("GoodSubtypeId")
                        .HasColumnType("uuid");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActual")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ManufacturerId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("GoodSubtypeId");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("Goods");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4bad078f-209c-4c0b-9027-96b70a8dc009"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(9960),
                            Description = "Ветровка выполнена из гладкого текстиля. Модель прямого силуэта. Детали: воротник-стойка, застежка на молнии, боковые карманы, удлиненная спинка.",
                            GoodSubtypeId = new Guid("8acd0563-e18e-4771-aa9d-99a35470c95c"),
                            ImageURL = "https://a.lmcdn.ru/product/R/T/RTLACJ839401_19495431_5_v1_2x.jpg",
                            IsActual = true,
                            ManufacturerId = new Guid("c600135f-dfd8-4a23-ad1f-738965f953d4"),
                            Name = "Ветровка ACTIVE Jacket Puma Black",
                            Price = 6999m
                        },
                        new
                        {
                            Id = new Guid("054cfb9a-02dc-4a79-bf4f-b15623f5a17c"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(9970),
                            Description = "Куртка выполнена из водо и ветрозащитного текстиля. Детали: капюшон, застежка на молнии с защитой подбородка, два внешних кармана, тонкий слой утеплителя.",
                            GoodSubtypeId = new Guid("8acd0563-e18e-4771-aa9d-99a35470c95c"),
                            ImageURL = "https://a.lmcdn.ru/product/R/T/RTLACX655501_21520428_4_v1_2x.jpg",
                            IsActual = true,
                            ManufacturerId = new Guid("085bd07b-1b7f-43f1-a678-80750e479bd7"),
                            Name = "Куртка утепленная ESS INS HYB JKT",
                            Price = 12999m
                        },
                        new
                        {
                            Id = new Guid("005c91e1-884b-43a7-817e-ef63fe1f1dff"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(9972),
                            Description = "Рюкзак выполнен из прочной ткани CORDURA® и декорирован лентой adidas. В нем найдется место для твоих повседневных вещей, а также внутренний карман для ноутбука и передний карман на молнии для ценных вещей - она создана как для напряженных дней, так и для небольших приключений. Модель минимум на 40% состоит из переработанных материалов и представляет одно из наших решений по сокращению пластиковых отходов.",
                            GoodSubtypeId = new Guid("4f05b48c-f3e3-4f50-b8f0-dce83fe065b9"),
                            ImageURL = "https://a.lmcdn.ru/product/R/T/RTLACY475501_21648496_1_v1.jpg",
                            IsActual = true,
                            ManufacturerId = new Guid("085bd07b-1b7f-43f1-a678-80750e479bd7"),
                            Name = "Рюкзак MH BP",
                            Price = 7499m
                        },
                        new
                        {
                            Id = new Guid("8e3db1f0-5b21-4d02-b2bd-cc418cf7697b"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(9976),
                            Description = "Сумка выполнена из прочного текстиля. Детали: застежка на молнии, один внешний карман и один внутренний, подкладка из текстиля.",
                            GoodSubtypeId = new Guid("a24e3678-2362-48cb-8f67-8ad37f4b2108"),
                            ImageURL = "https://a.lmcdn.ru/product/R/T/RTLACZ076602_22799653_1_v1.jpg",
                            IsActual = true,
                            ManufacturerId = new Guid("085bd07b-1b7f-43f1-a678-80750e479bd7"),
                            Name = "Сумка LINEAR ORG",
                            Price = 1699m
                        },
                        new
                        {
                            Id = new Guid("8be0ca28-3157-44c8-97d7-c17da8e00dba"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(9978),
                            Description = "Товар как минимум на 50% состоит из переработанных материалов, а значит, на его создание потребовалось меньше природных ресурсов. Ткань получена путем переработки пластика или текстильных остатков. Выбирая этот товар, вы вносите свой вклад в сохранение окружающей среды.",
                            GoodSubtypeId = new Guid("a5ecd126-c79c-4f2f-84e4-6fa48b304a74"),
                            ImageURL = "https://a.lmcdn.ru/product/R/T/RTLACY114001_21699686_1_v1.jpg",
                            IsActual = true,
                            ManufacturerId = new Guid("085bd07b-1b7f-43f1-a678-80750e479bd7"),
                            Name = "Бейсболка TECH 3P CAP R.R",
                            Price = 4399m
                        },
                        new
                        {
                            Id = new Guid("39bbcadf-8ab3-409f-8a46-3479c3f63d09"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 569, DateTimeKind.Local).AddTicks(30),
                            Description = "Товар как минимум на 50% состоит из переработанных материалов, а значит, на его создание потребовалось меньше природных ресурсов. Ткань получена путем переработки пластика или текстильных остатков. Выбирая этот товар, вы вносите свой вклад в сохранение окружающей среды.",
                            GoodSubtypeId = new Guid("80faa5d3-7c8d-4559-9221-c570d6196b84"),
                            ImageURL = "https://a.lmcdn.ru/product/R/T/RTLACY063901_21670176_1_v1.jpg",
                            IsActual = true,
                            ManufacturerId = new Guid("085bd07b-1b7f-43f1-a678-80750e479bd7"),
                            Name = "Шапка COLD.RDY BEANIE",
                            Price = 3999m
                        },
                        new
                        {
                            Id = new Guid("262fad09-d329-4a24-a4ae-dcfb817177d6"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 569, DateTimeKind.Local).AddTicks(31),
                            Description = "Товар как минимум на 50% состоит из переработанных материалов, а значит, на его создание потребовалось меньше природных ресурсов. Ткань получена путем переработки пластика или текстильных остатков. Выбирая этот товар, вы вносите свой вклад в сохранение окружающей среды.",
                            GoodSubtypeId = new Guid("65475dc7-95c2-46de-a4da-60efdf5bb1f1"),
                            ImageURL = "https://a.lmcdn.ru/product/R/T/RTLACV074501_21321718_1_v1.jpg",
                            IsActual = true,
                            ManufacturerId = new Guid("085bd07b-1b7f-43f1-a678-80750e479bd7"),
                            Name = "Перчатки для фитнеса TRAINING",
                            Price = 4499m
                        },
                        new
                        {
                            Id = new Guid("979b7d24-f89a-438b-89e8-f9d21f86b299"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 569, DateTimeKind.Local).AddTicks(33),
                            Description = "Утепленная куртка выполнена из стеганого текстиля с толстым слоем искусственного утеплителя. Модель прямого кроя. Детали: застежка на молнии, внутренняя ветрозащитная планка, воротник-стойка, 2 кармана на молнии.",
                            GoodSubtypeId = new Guid("8acd0563-e18e-4771-aa9d-99a35470c95c"),
                            ImageURL = "https://a.lmcdn.ru/product/R/T/RTLADH300501_22798637_5_v1_2x.jpg",
                            IsActual = true,
                            ManufacturerId = new Guid("0335ae7c-4fc3-4d3b-a9cb-9e0692a555d4"),
                            Name = "Куртка утепленная M NK CLUB PUFFER JKT",
                            Price = 38390m
                        },
                        new
                        {
                            Id = new Guid("50a71ba9-c29c-47fd-834b-0e3279a9e69f"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 569, DateTimeKind.Local).AddTicks(37),
                            Description = "",
                            GoodSubtypeId = new Guid("8acd0563-e18e-4771-aa9d-99a35470c95c"),
                            ImageURL = "https://a.lmcdn.ru/product/R/T/RTLADF178902_22904293_5_v1_2x.jpg",
                            IsActual = true,
                            ManufacturerId = new Guid("0335ae7c-4fc3-4d3b-a9cb-9e0692a555d4"),
                            Name = "Худи M NSW CLUB HOODIE PO FT",
                            Price = 11690m
                        },
                        new
                        {
                            Id = new Guid("49da924b-37c4-4195-a76d-a306b45f1f11"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 569, DateTimeKind.Local).AddTicks(39),
                            Description = "Брюки спортивные выполнены из эластичной ткани. Технология Dri-FIT помогает отводить влагу и обеспечивает комфорт. Детали: эластичный пояс с фиксирующим шнурком, боковые карманы обеспечивают хранение мелких предметов, задний карман имеет пароизоляцию для защиты от пота, манжеты, светоотражающие элементы.",
                            GoodSubtypeId = new Guid("964ba25b-7341-47e9-a3bc-a48586d28c29"),
                            ImageURL = "https://a.lmcdn.ru/product/R/T/RTLADI750701_22922904_4_v1_2x.jpg",
                            IsActual = true,
                            ManufacturerId = new Guid("0335ae7c-4fc3-4d3b-a9cb-9e0692a555d4"),
                            Name = "Брюки спортивные M NK DF PHENOM ELITE KNIT PANT",
                            Price = 16390m
                        },
                        new
                        {
                            Id = new Guid("c8370084-cbdf-4279-bd15-7ad754e6fbc7"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 569, DateTimeKind.Local).AddTicks(40),
                            Description = "Кроссовки выполнены из натуральной кожи и текстиля. Сетка и замша на верху придают вентиляцию и прочность. Резиновая подошва, вдохновленная вафлями, обеспечивает превосходное сцепление с дорогой и долговечность, кивая на стиль наследия. Зажим для пятки способствует стабильности. Детали: шнуровка.",
                            GoodSubtypeId = new Guid("2b9d7a55-a1b9-4ded-960e-548b878ec410"),
                            ImageURL = "https://a.lmcdn.ru/product/R/T/RTLACR843402_23116771_1_v1.jpg",
                            IsActual = true,
                            ManufacturerId = new Guid("0335ae7c-4fc3-4d3b-a9cb-9e0692a555d4"),
                            Name = "Кроссовки Nike Venture Runner",
                            Price = 13590m
                        },
                        new
                        {
                            Id = new Guid("92345f5c-1ca3-474f-856e-b8eb4fc3abb2"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 569, DateTimeKind.Local).AddTicks(42),
                            Description = "",
                            GoodSubtypeId = new Guid("ae8d21f0-4a3c-4a72-b32b-a09ee129dd21"),
                            ImageURL = "https://a.lmcdn.ru/product/R/T/RTLACN213702_23428269_3_v1.jpg",
                            IsActual = true,
                            ManufacturerId = new Guid("7f0e715b-2612-4c10-923f-23fcd0343d5b"),
                            Name = "Кеды",
                            Price = 9490m
                        },
                        new
                        {
                            Id = new Guid("3999de2d-17c0-45cb-928d-1c2b1967d94c"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 569, DateTimeKind.Local).AddTicks(43),
                            Description = "",
                            GoodSubtypeId = new Guid("dc87c20f-6e9c-4ae9-b764-805758d01f9f"),
                            ImageURL = "https://a.lmcdn.ru/product/R/T/RTLABP198301_17558030_1_v1.jpg",
                            IsActual = true,
                            ManufacturerId = new Guid("1580cfa7-f859-4ea8-9e58-7c5f28daa940"),
                            Name = "Браслет",
                            Price = 8399m
                        },
                        new
                        {
                            Id = new Guid("6c5ab98d-0d85-4d8e-badd-6103ed34f8b3"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 569, DateTimeKind.Local).AddTicks(45),
                            Description = "",
                            GoodSubtypeId = new Guid("d1df6dad-f860-41f3-abd7-7493cd2d4d0a"),
                            ImageURL = "https://a.lmcdn.ru/product/R/T/RTLABP201301_17556292_1_v1.jpg",
                            IsActual = true,
                            ManufacturerId = new Guid("1580cfa7-f859-4ea8-9e58-7c5f28daa940"),
                            Name = "Кольцо",
                            Price = 4699m
                        },
                        new
                        {
                            Id = new Guid("d06c7e25-b4df-490d-9bfe-1961ba631b94"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 569, DateTimeKind.Local).AddTicks(46),
                            Description = "Куртка адидас чёрная ....",
                            GoodSubtypeId = new Guid("8acd0563-e18e-4771-aa9d-99a35470c95c"),
                            ImageURL = "https://fullsourcemedia.s3.amazonaws.com/images/items/e/raw/J331_black_form_front.jpg",
                            IsActual = true,
                            ManufacturerId = new Guid("085bd07b-1b7f-43f1-a678-80750e479bd7"),
                            Name = "Куртка адидас",
                            Price = 9399m
                        },
                        new
                        {
                            Id = new Guid("dd05de80-0908-4311-9e21-872206b1afee"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 569, DateTimeKind.Local).AddTicks(47),
                            Description = "Кроссовки nike белые ....",
                            GoodSubtypeId = new Guid("2b9d7a55-a1b9-4ded-960e-548b878ec410"),
                            ImageURL = "https://i.pinimg.com/originals/58/7d/82/587d82a229ceba80432497d594206c06.png",
                            IsActual = true,
                            ManufacturerId = new Guid("0335ae7c-4fc3-4d3b-a9cb-9e0692a555d4"),
                            Name = "Кроссовки nike",
                            Price = 7675m
                        },
                        new
                        {
                            Id = new Guid("02742a65-bc00-430d-9d21-eb42a08b1ea6"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 569, DateTimeKind.Local).AddTicks(50),
                            Description = "Рюкзак nike белые ....",
                            GoodSubtypeId = new Guid("4f05b48c-f3e3-4f50-b8f0-dce83fe065b9"),
                            ImageURL = "https://freepngimg.com/thumb/backpack/9-2-backpack-png-hd.png",
                            IsActual = true,
                            ManufacturerId = new Guid("0335ae7c-4fc3-4d3b-a9cb-9e0692a555d4"),
                            Name = "Рюкзак nike",
                            Price = 7675m
                        },
                        new
                        {
                            Id = new Guid("96c7d37a-dba5-440c-8d42-0ef196b6c644"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 569, DateTimeKind.Local).AddTicks(52),
                            Description = "Футболка adidas синяя ....",
                            GoodSubtypeId = new Guid("f7d01dc8-589b-43ad-98d5-46127e32a05d"),
                            ImageURL = "https://c1.klipartz.com/pngpicture/301/681/sticker-png-tshirt-tshirt-clothing-dress-fashion-jacket-playera-laundry-aline.png",
                            IsActual = true,
                            ManufacturerId = new Guid("085bd07b-1b7f-43f1-a678-80750e479bd7"),
                            Name = "Футболка adidas",
                            Price = 10250m
                        },
                        new
                        {
                            Id = new Guid("720b4243-42b4-4ef7-a316-abbd825da0fd"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 569, DateTimeKind.Local).AddTicks(53),
                            Description = "",
                            GoodSubtypeId = new Guid("4c3a1fab-f569-41c3-beca-d56629c87d58"),
                            ImageURL = "/empty_good.png",
                            IsActual = true,
                            ManufacturerId = new Guid("20dbcf43-c4b5-4bb6-ba4f-3b4088cbc8ed"),
                            Name = "Сумка 1",
                            Price = 9000m
                        },
                        new
                        {
                            Id = new Guid("0265f3b0-cfc6-4698-a3de-733aea5a561d"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 569, DateTimeKind.Local).AddTicks(55),
                            Description = "",
                            GoodSubtypeId = new Guid("4c3a1fab-f569-41c3-beca-d56629c87d58"),
                            ImageURL = "/empty_good.png",
                            IsActual = true,
                            ManufacturerId = new Guid("20dbcf43-c4b5-4bb6-ba4f-3b4088cbc8ed"),
                            Name = "Сумка 2",
                            Price = 20000m
                        },
                        new
                        {
                            Id = new Guid("09a358dd-5d56-4b03-951d-e0d5e57e4577"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 569, DateTimeKind.Local).AddTicks(56),
                            Description = "",
                            GoodSubtypeId = new Guid("4c3a1fab-f569-41c3-beca-d56629c87d58"),
                            ImageURL = "/empty_good.png",
                            IsActual = true,
                            ManufacturerId = new Guid("20dbcf43-c4b5-4bb6-ba4f-3b4088cbc8ed"),
                            Name = "Сумка 3",
                            Price = 15349m
                        },
                        new
                        {
                            Id = new Guid("8c1c2ec7-7166-4587-9bdf-5616157d8adf"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 569, DateTimeKind.Local).AddTicks(57),
                            Description = "",
                            GoodSubtypeId = new Guid("4c3a1fab-f569-41c3-beca-d56629c87d58"),
                            ImageURL = "/empty_good.png",
                            IsActual = true,
                            ManufacturerId = new Guid("20dbcf43-c4b5-4bb6-ba4f-3b4088cbc8ed"),
                            Name = "Сумка 4",
                            Price = 3053m
                        },
                        new
                        {
                            Id = new Guid("a2b1b629-e93d-4fcf-96d0-bd974d27196d"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 569, DateTimeKind.Local).AddTicks(58),
                            Description = "",
                            GoodSubtypeId = new Guid("a52f0b4f-e30e-423c-be11-e7c8570db9fe"),
                            ImageURL = "/empty_good.png",
                            IsActual = true,
                            ManufacturerId = new Guid("085bd07b-1b7f-43f1-a678-80750e479bd7"),
                            Name = "Подштанники 1",
                            Price = 7908m
                        },
                        new
                        {
                            Id = new Guid("b895fe55-d207-4843-af0c-4a5538fef899"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 569, DateTimeKind.Local).AddTicks(60),
                            Description = "",
                            GoodSubtypeId = new Guid("a52f0b4f-e30e-423c-be11-e7c8570db9fe"),
                            ImageURL = "/empty_good.png",
                            IsActual = true,
                            ManufacturerId = new Guid("0335ae7c-4fc3-4d3b-a9cb-9e0692a555d4"),
                            Name = "Подштанники 2",
                            Price = 5789m
                        },
                        new
                        {
                            Id = new Guid("0bbb6b30-8193-4e2a-abd0-9b5e7dbecc88"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 569, DateTimeKind.Local).AddTicks(64),
                            Description = "",
                            GoodSubtypeId = new Guid("e7470efb-bd90-40a9-9ca2-8e344e8d4f45"),
                            ImageURL = "/empty_good.png",
                            IsActual = true,
                            ManufacturerId = new Guid("7f0e715b-2612-4c10-923f-23fcd0343d5b"),
                            Name = "Легинсы 1",
                            Price = 7000m
                        },
                        new
                        {
                            Id = new Guid("3a1bcccb-3400-4590-aeca-4d18b2b19941"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 569, DateTimeKind.Local).AddTicks(66),
                            Description = "",
                            GoodSubtypeId = new Guid("e7470efb-bd90-40a9-9ca2-8e344e8d4f45"),
                            ImageURL = "/empty_good.png",
                            IsActual = true,
                            ManufacturerId = new Guid("7f0e715b-2612-4c10-923f-23fcd0343d5b"),
                            Name = "Легинсы 2",
                            Price = 7896m
                        });
                });

            modelBuilder.Entity("SneakerShop.DAL.Models.Entities.GoodSubtype", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("DeletedUserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("GoodTypeId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActual")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("GoodTypeId");

                    b.ToTable("GoodSubtypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8acd0563-e18e-4771-aa9d-99a35470c95c"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(6085),
                            GoodTypeId = new Guid("fd096c13-10e7-48c6-976a-4ddb522ee6e0"),
                            IsActual = true,
                            Name = "Куртки"
                        },
                        new
                        {
                            Id = new Guid("f7d01dc8-589b-43ad-98d5-46127e32a05d"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(6088),
                            GoodTypeId = new Guid("fd096c13-10e7-48c6-976a-4ddb522ee6e0"),
                            IsActual = true,
                            Name = "Футболки"
                        },
                        new
                        {
                            Id = new Guid("630fb955-f9d3-4a82-9c1a-e2466f758842"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(6091),
                            GoodTypeId = new Guid("fd096c13-10e7-48c6-976a-4ddb522ee6e0"),
                            IsActual = true,
                            Name = "Майки"
                        },
                        new
                        {
                            Id = new Guid("ec89f8a9-bf47-415b-b3f8-644933f4739a"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(6093),
                            GoodTypeId = new Guid("fd096c13-10e7-48c6-976a-4ddb522ee6e0"),
                            IsActual = true,
                            Name = "Кофты"
                        },
                        new
                        {
                            Id = new Guid("a9d20359-a3fd-41ee-bddc-29ea25f767e5"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(6094),
                            GoodTypeId = new Guid("fd096c13-10e7-48c6-976a-4ddb522ee6e0"),
                            IsActual = true,
                            Name = "Джинсы"
                        },
                        new
                        {
                            Id = new Guid("964ba25b-7341-47e9-a3bc-a48586d28c29"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(6095),
                            GoodTypeId = new Guid("fd096c13-10e7-48c6-976a-4ddb522ee6e0"),
                            IsActual = true,
                            Name = "Брюки"
                        },
                        new
                        {
                            Id = new Guid("a06e411e-bd5e-4e3d-b7f2-251c9320a78d"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(6101),
                            GoodTypeId = new Guid("fd096c13-10e7-48c6-976a-4ddb522ee6e0"),
                            IsActual = true,
                            Name = "Юбки"
                        },
                        new
                        {
                            Id = new Guid("e7470efb-bd90-40a9-9ca2-8e344e8d4f45"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(6102),
                            GoodTypeId = new Guid("fd096c13-10e7-48c6-976a-4ddb522ee6e0"),
                            IsActual = true,
                            Name = "Легинсы"
                        },
                        new
                        {
                            Id = new Guid("a5ecd126-c79c-4f2f-84e4-6fa48b304a74"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(6102),
                            GoodTypeId = new Guid("fd096c13-10e7-48c6-976a-4ddb522ee6e0"),
                            IsActual = true,
                            Name = "Кепки"
                        },
                        new
                        {
                            Id = new Guid("80faa5d3-7c8d-4559-9221-c570d6196b84"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(6103),
                            GoodTypeId = new Guid("fd096c13-10e7-48c6-976a-4ddb522ee6e0"),
                            IsActual = true,
                            Name = "Шапки"
                        },
                        new
                        {
                            Id = new Guid("a52f0b4f-e30e-423c-be11-e7c8570db9fe"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(6106),
                            GoodTypeId = new Guid("3571b362-3c07-4113-ac2c-905b88be1b40"),
                            IsActual = true,
                            Name = "Подштанники"
                        },
                        new
                        {
                            Id = new Guid("2b9d7a55-a1b9-4ded-960e-548b878ec410"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(6107),
                            GoodTypeId = new Guid("2e28edc1-fa24-4b88-80dd-a884ef5e2a41"),
                            IsActual = true,
                            Name = "Кроссовки"
                        },
                        new
                        {
                            Id = new Guid("ae8d21f0-4a3c-4a72-b32b-a09ee129dd21"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(6108),
                            GoodTypeId = new Guid("2e28edc1-fa24-4b88-80dd-a884ef5e2a41"),
                            IsActual = true,
                            Name = "Кеды"
                        },
                        new
                        {
                            Id = new Guid("3cb59275-53ac-46e9-b7cd-ab3a5c839d27"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(6108),
                            GoodTypeId = new Guid("2e28edc1-fa24-4b88-80dd-a884ef5e2a41"),
                            IsActual = true,
                            Name = "Туфли"
                        },
                        new
                        {
                            Id = new Guid("9a753fcf-48a6-4c69-b4ad-7a56b45fba9a"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(6109),
                            GoodTypeId = new Guid("2e28edc1-fa24-4b88-80dd-a884ef5e2a41"),
                            IsActual = true,
                            Name = "Каблуки"
                        },
                        new
                        {
                            Id = new Guid("4f05b48c-f3e3-4f50-b8f0-dce83fe065b9"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(6110),
                            GoodTypeId = new Guid("b0410692-712a-4f98-8a72-7859b3594a98"),
                            IsActual = true,
                            Name = "Рюкзаки"
                        },
                        new
                        {
                            Id = new Guid("4c3a1fab-f569-41c3-beca-d56629c87d58"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(6111),
                            GoodTypeId = new Guid("b0410692-712a-4f98-8a72-7859b3594a98"),
                            IsActual = true,
                            Name = "Сумки"
                        },
                        new
                        {
                            Id = new Guid("a24e3678-2362-48cb-8f67-8ad37f4b2108"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(6112),
                            GoodTypeId = new Guid("b0410692-712a-4f98-8a72-7859b3594a98"),
                            IsActual = true,
                            Name = "Барсетки"
                        },
                        new
                        {
                            Id = new Guid("d1df6dad-f860-41f3-abd7-7493cd2d4d0a"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(6115),
                            GoodTypeId = new Guid("b0410692-712a-4f98-8a72-7859b3594a98"),
                            IsActual = true,
                            Name = "Кольца"
                        },
                        new
                        {
                            Id = new Guid("dc87c20f-6e9c-4ae9-b764-805758d01f9f"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(6115),
                            GoodTypeId = new Guid("b0410692-712a-4f98-8a72-7859b3594a98"),
                            IsActual = true,
                            Name = "Браслеты"
                        },
                        new
                        {
                            Id = new Guid("65475dc7-95c2-46de-a4da-60efdf5bb1f1"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(6116),
                            GoodTypeId = new Guid("b0410692-712a-4f98-8a72-7859b3594a98"),
                            IsActual = true,
                            Name = "Перчатки"
                        });
                });

            modelBuilder.Entity("SneakerShop.DAL.Models.Entities.GoodType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("DeletedUserId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActual")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("GoodTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fd096c13-10e7-48c6-976a-4ddb522ee6e0"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(6025),
                            IsActual = true,
                            Name = "Верхняя одежда"
                        },
                        new
                        {
                            Id = new Guid("3571b362-3c07-4113-ac2c-905b88be1b40"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(6038),
                            IsActual = true,
                            Name = "Нижняя одежда"
                        },
                        new
                        {
                            Id = new Guid("2e28edc1-fa24-4b88-80dd-a884ef5e2a41"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(6039),
                            IsActual = true,
                            Name = "Обувь"
                        },
                        new
                        {
                            Id = new Guid("b0410692-712a-4f98-8a72-7859b3594a98"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(6040),
                            IsActual = true,
                            Name = "Аксессуары"
                        });
                });

            modelBuilder.Entity("SneakerShop.DAL.Models.Entities.Manufacturer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("DeletedUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActual")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Manufacturers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("085bd07b-1b7f-43f1-a678-80750e479bd7"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(7395),
                            Description = "Немецкая транснациональная компания по производству спортивной одежды, обуви и аксессуаров",
                            ImageURL = "https://flomaster.top/uploads/posts/2023-10/1697227433_flomaster-top-p-adidas-risunok-instagram-1.jpg",
                            IsActual = true,
                            Name = "Adidas"
                        },
                        new
                        {
                            Id = new Guid("0335ae7c-4fc3-4d3b-a9cb-9e0692a555d4"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(7401),
                            Description = "Американская транснациональная компания, специализирующаяся на спортивной одежде и обуви",
                            ImageURL = "https://gas-kvas.com/grafic/uploads/posts/2024-01/gas-kvas-com-p-naik-logotip-na-prozrachnom-fone-7.png",
                            IsActual = true,
                            Name = "Nike"
                        },
                        new
                        {
                            Id = new Guid("c600135f-dfd8-4a23-ad1f-738965f953d4"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(7402),
                            Description = "Промышленная компания Германии, специализирующаяся на выпуске спортивной обуви, одежды и инвентаря под торговой маркой Puma",
                            ImageURL = "https://chelsfieldlakes.co.uk/wp-content/uploads/2017/08/puma-logo-black.png",
                            IsActual = true,
                            Name = "Puma"
                        },
                        new
                        {
                            Id = new Guid("20dbcf43-c4b5-4bb6-ba4f-3b4088cbc8ed"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(7403),
                            Description = "Итальянский дом моды, производитель одежды, парфюмерии и галантереи",
                            ImageURL = "https://decalfly.com/cdn/shop/products/gucci-brand-decal-logo-sticker_1024x1024.jpg?v=1590520355",
                            IsActual = true,
                            Name = "Gucci"
                        },
                        new
                        {
                            Id = new Guid("7f0e715b-2612-4c10-923f-23fcd0343d5b"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(7404),
                            Description = "Американский бренд одежды премиум-класса, выпускающий одежду, обувь, аксессуары, ароматы и товары для дома",
                            ImageURL = "https://ideacdn.net/idea/jj/63/myassets/brands/188/Tommy-Hilfiger-Amblem.jpg?revision=1661341987",
                            IsActual = true,
                            Name = "Tommy Hilfiger"
                        },
                        new
                        {
                            Id = new Guid("1580cfa7-f859-4ea8-9e58-7c5f28daa940"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(7409),
                            Description = "Американская розничная компания и одноимённый бренд мужской и женской одежды и аксессуаров, а также часов, ювелирных изделий, духов и обуви.",
                            ImageURL = "https://upload.wikimedia.org/wikipedia/commons/7/75/Logo_Guess.jpg",
                            IsActual = true,
                            Name = "Guess"
                        });
                });

            modelBuilder.Entity("SneakerShop.DAL.Models.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("DeletedUserId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActual")
                        .HasColumnType("boolean");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("SneakerShop.DAL.Models.Entities.OrderedGood", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Count")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("DeletedUserId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("DiscountId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("GoodId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActual")
                        .HasColumnType("boolean");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SizeId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("DiscountId");

                    b.HasIndex("GoodId");

                    b.HasIndex("OrderId");

                    b.HasIndex("SizeId");

                    b.ToTable("OrderedGoods");
                });

            modelBuilder.Entity("SneakerShop.DAL.Models.Entities.Size", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("DeletedUserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("GoodSubtypeId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActual")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("GoodSubtypeId");

                    b.ToTable("Sizes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("59d8f908-9940-4102-8246-ac344e9ae6ea"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(8196),
                            GoodSubtypeId = new Guid("8acd0563-e18e-4771-aa9d-99a35470c95c"),
                            IsActual = true,
                            Name = "XXL"
                        },
                        new
                        {
                            Id = new Guid("07f8419b-bbc2-488f-8350-74e7ee183cb2"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(8204),
                            GoodSubtypeId = new Guid("8acd0563-e18e-4771-aa9d-99a35470c95c"),
                            IsActual = true,
                            Name = "XL"
                        },
                        new
                        {
                            Id = new Guid("4f4d1749-c42b-4b22-848d-d914ef9c37b6"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(8206),
                            GoodSubtypeId = new Guid("8acd0563-e18e-4771-aa9d-99a35470c95c"),
                            IsActual = true,
                            Name = "L"
                        },
                        new
                        {
                            Id = new Guid("a8815a59-3f46-4ab8-b863-a7f9889879c8"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(8212),
                            GoodSubtypeId = new Guid("8acd0563-e18e-4771-aa9d-99a35470c95c"),
                            IsActual = true,
                            Name = "M"
                        },
                        new
                        {
                            Id = new Guid("c10f3e0c-0d0b-471e-aef6-4556c14838ed"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(8213),
                            GoodSubtypeId = new Guid("8acd0563-e18e-4771-aa9d-99a35470c95c"),
                            IsActual = true,
                            Name = "S"
                        },
                        new
                        {
                            Id = new Guid("c7c14374-d27a-4110-92f4-64086b5d7604"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(8216),
                            GoodSubtypeId = new Guid("8acd0563-e18e-4771-aa9d-99a35470c95c"),
                            IsActual = true,
                            Name = "XS"
                        },
                        new
                        {
                            Id = new Guid("1eeb4b46-cf20-4e82-afd7-6d025ccdc392"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(8217),
                            GoodSubtypeId = new Guid("2b9d7a55-a1b9-4ded-960e-548b878ec410"),
                            IsActual = true,
                            Name = "XXL"
                        },
                        new
                        {
                            Id = new Guid("c0f41440-f3bb-4042-a592-4b5a1e0a81e2"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(8222),
                            GoodSubtypeId = new Guid("2b9d7a55-a1b9-4ded-960e-548b878ec410"),
                            IsActual = true,
                            Name = "XL"
                        },
                        new
                        {
                            Id = new Guid("0620119e-6bbb-4a99-ab3f-c36842ba3748"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(8223),
                            GoodSubtypeId = new Guid("2b9d7a55-a1b9-4ded-960e-548b878ec410"),
                            IsActual = true,
                            Name = "L"
                        },
                        new
                        {
                            Id = new Guid("ba62e2aa-0aab-4dca-8351-cdb85a85d926"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(8225),
                            GoodSubtypeId = new Guid("2b9d7a55-a1b9-4ded-960e-548b878ec410"),
                            IsActual = true,
                            Name = "M"
                        },
                        new
                        {
                            Id = new Guid("f014693a-c251-45dd-b769-f988eabb247f"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(8226),
                            GoodSubtypeId = new Guid("2b9d7a55-a1b9-4ded-960e-548b878ec410"),
                            IsActual = true,
                            Name = "S"
                        },
                        new
                        {
                            Id = new Guid("d7f9e064-34e2-40f1-a39b-0e9dc6b91f23"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(8227),
                            GoodSubtypeId = new Guid("2b9d7a55-a1b9-4ded-960e-548b878ec410"),
                            IsActual = true,
                            Name = "XS"
                        },
                        new
                        {
                            Id = new Guid("d7e46b26-9d4f-44d1-a46e-e5e0f96bd08a"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(8228),
                            GoodSubtypeId = new Guid("4f05b48c-f3e3-4f50-b8f0-dce83fe065b9"),
                            IsActual = true,
                            Name = "XXL"
                        },
                        new
                        {
                            Id = new Guid("5fb70383-3e3c-4bb8-9667-54682167c52f"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(8230),
                            GoodSubtypeId = new Guid("4f05b48c-f3e3-4f50-b8f0-dce83fe065b9"),
                            IsActual = true,
                            Name = "XL"
                        },
                        new
                        {
                            Id = new Guid("194dcd11-5cea-4f1f-a991-7951ff6df92f"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(8231),
                            GoodSubtypeId = new Guid("4f05b48c-f3e3-4f50-b8f0-dce83fe065b9"),
                            IsActual = true,
                            Name = "M"
                        },
                        new
                        {
                            Id = new Guid("54a53749-7c76-4d01-bf08-143b4760f5f1"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(8234),
                            GoodSubtypeId = new Guid("4f05b48c-f3e3-4f50-b8f0-dce83fe065b9"),
                            IsActual = true,
                            Name = "S"
                        },
                        new
                        {
                            Id = new Guid("9f091c7b-fd71-4dde-9083-41a26e1e173b"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(8235),
                            GoodSubtypeId = new Guid("f7d01dc8-589b-43ad-98d5-46127e32a05d"),
                            IsActual = true,
                            Name = "XXL"
                        },
                        new
                        {
                            Id = new Guid("b6f481cc-1782-4798-9e3e-e89c5c1b0be7"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(8237),
                            GoodSubtypeId = new Guid("f7d01dc8-589b-43ad-98d5-46127e32a05d"),
                            IsActual = true,
                            Name = "XL"
                        },
                        new
                        {
                            Id = new Guid("f3ea2da8-1522-444c-9cff-f5c9e2f9091b"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(8238),
                            GoodSubtypeId = new Guid("f7d01dc8-589b-43ad-98d5-46127e32a05d"),
                            IsActual = true,
                            Name = "L"
                        },
                        new
                        {
                            Id = new Guid("7007f608-6e14-4fb5-93b6-afe3634fd7c5"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(8239),
                            GoodSubtypeId = new Guid("f7d01dc8-589b-43ad-98d5-46127e32a05d"),
                            IsActual = true,
                            Name = "M"
                        },
                        new
                        {
                            Id = new Guid("81d09c57-dc23-4927-acdc-17b076137dde"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(8240),
                            GoodSubtypeId = new Guid("f7d01dc8-589b-43ad-98d5-46127e32a05d"),
                            IsActual = true,
                            Name = "S"
                        },
                        new
                        {
                            Id = new Guid("62622cc2-2a7b-4cd2-985a-7b38579ff310"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(8241),
                            GoodSubtypeId = new Guid("f7d01dc8-589b-43ad-98d5-46127e32a05d"),
                            IsActual = true,
                            Name = "XS"
                        },
                        new
                        {
                            Id = new Guid("79c2d304-cc18-4761-8494-4f3f4e3df1cc"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(8242),
                            GoodSubtypeId = new Guid("630fb955-f9d3-4a82-9c1a-e2466f758842"),
                            IsActual = true,
                            Name = "M"
                        },
                        new
                        {
                            Id = new Guid("7e9e50b7-a211-4108-b968-e3ae49db3bec"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(8244),
                            GoodSubtypeId = new Guid("ec89f8a9-bf47-415b-b3f8-644933f4739a"),
                            IsActual = true,
                            Name = "M"
                        },
                        new
                        {
                            Id = new Guid("c815cd07-e72b-442b-81c6-d08f4993031c"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(8245),
                            GoodSubtypeId = new Guid("a9d20359-a3fd-41ee-bddc-29ea25f767e5"),
                            IsActual = true,
                            Name = "M"
                        },
                        new
                        {
                            Id = new Guid("b6fdd6be-b33e-4a30-b3be-1fe8429f6eae"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(8246),
                            GoodSubtypeId = new Guid("964ba25b-7341-47e9-a3bc-a48586d28c29"),
                            IsActual = true,
                            Name = "M"
                        },
                        new
                        {
                            Id = new Guid("0188f128-9295-44f2-8926-9ba81fceb787"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(8247),
                            GoodSubtypeId = new Guid("a06e411e-bd5e-4e3d-b7f2-251c9320a78d"),
                            IsActual = true,
                            Name = "M"
                        },
                        new
                        {
                            Id = new Guid("da42dedf-4f56-498f-b0be-385618d5b5a5"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(8248),
                            GoodSubtypeId = new Guid("e7470efb-bd90-40a9-9ca2-8e344e8d4f45"),
                            IsActual = true,
                            Name = "M"
                        },
                        new
                        {
                            Id = new Guid("af874d12-b847-4349-8189-8f7af1a88c40"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(8270),
                            GoodSubtypeId = new Guid("a5ecd126-c79c-4f2f-84e4-6fa48b304a74"),
                            IsActual = true,
                            Name = "M"
                        },
                        new
                        {
                            Id = new Guid("5289cee8-c137-4b5b-b128-ea8817339e13"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(8271),
                            GoodSubtypeId = new Guid("80faa5d3-7c8d-4559-9221-c570d6196b84"),
                            IsActual = true,
                            Name = "M"
                        },
                        new
                        {
                            Id = new Guid("7840bbf9-6430-4df9-9953-1a5756b12a1b"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(8272),
                            GoodSubtypeId = new Guid("a52f0b4f-e30e-423c-be11-e7c8570db9fe"),
                            IsActual = true,
                            Name = "M"
                        },
                        new
                        {
                            Id = new Guid("4902ba7e-42d5-4b42-880c-3f2604c634be"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(8275),
                            GoodSubtypeId = new Guid("ae8d21f0-4a3c-4a72-b32b-a09ee129dd21"),
                            IsActual = true,
                            Name = "M"
                        },
                        new
                        {
                            Id = new Guid("acee8efa-ca20-45c1-8c65-f4978fe71111"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(8276),
                            GoodSubtypeId = new Guid("3cb59275-53ac-46e9-b7cd-ab3a5c839d27"),
                            IsActual = true,
                            Name = "M"
                        },
                        new
                        {
                            Id = new Guid("206d6101-db9f-4684-8eed-249f7682f935"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(8278),
                            GoodSubtypeId = new Guid("9a753fcf-48a6-4c69-b4ad-7a56b45fba9a"),
                            IsActual = true,
                            Name = "M"
                        },
                        new
                        {
                            Id = new Guid("f71e95b8-2c78-4404-a2b3-0d056e8eaf00"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(8279),
                            GoodSubtypeId = new Guid("4c3a1fab-f569-41c3-beca-d56629c87d58"),
                            IsActual = true,
                            Name = "M"
                        },
                        new
                        {
                            Id = new Guid("8562ebc1-7201-42a3-9913-10f8c4d8e943"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(8280),
                            GoodSubtypeId = new Guid("a24e3678-2362-48cb-8f67-8ad37f4b2108"),
                            IsActual = true,
                            Name = "M"
                        },
                        new
                        {
                            Id = new Guid("925c58e0-b097-4a70-bd3a-464bdd815692"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(8281),
                            GoodSubtypeId = new Guid("d1df6dad-f860-41f3-abd7-7493cd2d4d0a"),
                            IsActual = true,
                            Name = "M"
                        },
                        new
                        {
                            Id = new Guid("71839bc2-37b9-4a53-9844-d9d2828f46c3"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(8282),
                            GoodSubtypeId = new Guid("dc87c20f-6e9c-4ae9-b764-805758d01f9f"),
                            IsActual = true,
                            Name = "M"
                        },
                        new
                        {
                            Id = new Guid("f1e308d7-fb33-44b2-84b7-f6535c06e251"),
                            CreateDate = new DateTime(2024, 5, 9, 11, 4, 26, 568, DateTimeKind.Local).AddTicks(8283),
                            GoodSubtypeId = new Guid("65475dc7-95c2-46de-a4da-60efdf5bb1f1"),
                            IsActual = true,
                            Name = "M"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("SneakerShop.DAL.Models.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("SneakerShop.DAL.Models.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SneakerShop.DAL.Models.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("SneakerShop.DAL.Models.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SneakerShop.DAL.Models.Entities.BasketElement", b =>
                {
                    b.HasOne("SneakerShop.DAL.Models.Entities.Discount", "_Discount")
                        .WithMany("BasketElements")
                        .HasForeignKey("DiscountId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SneakerShop.DAL.Models.Entities.Good", "_Good")
                        .WithMany("BasketElements")
                        .HasForeignKey("GoodId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SneakerShop.DAL.Models.Entities.Size", "_Size")
                        .WithMany("BasketElements")
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SneakerShop.DAL.Models.Entities.AppUser", "_User")
                        .WithMany("Basket")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("_Discount");

                    b.Navigation("_Good");

                    b.Navigation("_Size");

                    b.Navigation("_User");
                });

            modelBuilder.Entity("SneakerShop.DAL.Models.Entities.Discount", b =>
                {
                    b.HasOne("SneakerShop.DAL.Models.Entities.DiscountType", "_DiscountType")
                        .WithMany("Discounts")
                        .HasForeignKey("DiscountTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SneakerShop.DAL.Models.Entities.Good", "_Good")
                        .WithMany("Discounts")
                        .HasForeignKey("GoodId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("_DiscountType");

                    b.Navigation("_Good");
                });

            modelBuilder.Entity("SneakerShop.DAL.Models.Entities.Good", b =>
                {
                    b.HasOne("SneakerShop.DAL.Models.Entities.GoodSubtype", "_GoodSubtype")
                        .WithMany("Goods")
                        .HasForeignKey("GoodSubtypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SneakerShop.DAL.Models.Entities.Manufacturer", "_Manufacturer")
                        .WithMany("Goods")
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("_GoodSubtype");

                    b.Navigation("_Manufacturer");
                });

            modelBuilder.Entity("SneakerShop.DAL.Models.Entities.GoodSubtype", b =>
                {
                    b.HasOne("SneakerShop.DAL.Models.Entities.GoodType", "_GoodType")
                        .WithMany("GoodSubtypes")
                        .HasForeignKey("GoodTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("_GoodType");
                });

            modelBuilder.Entity("SneakerShop.DAL.Models.Entities.Order", b =>
                {
                    b.HasOne("SneakerShop.DAL.Models.Entities.AppUser", "_User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("_User");
                });

            modelBuilder.Entity("SneakerShop.DAL.Models.Entities.OrderedGood", b =>
                {
                    b.HasOne("SneakerShop.DAL.Models.Entities.Discount", "_Discount")
                        .WithMany("OrderedGoods")
                        .HasForeignKey("DiscountId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SneakerShop.DAL.Models.Entities.Good", "_Good")
                        .WithMany("OrderedGoods")
                        .HasForeignKey("GoodId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SneakerShop.DAL.Models.Entities.Order", "_Order")
                        .WithMany("OrderedGoods")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SneakerShop.DAL.Models.Entities.Size", "_Size")
                        .WithMany("OrderedGoods")
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("_Discount");

                    b.Navigation("_Good");

                    b.Navigation("_Order");

                    b.Navigation("_Size");
                });

            modelBuilder.Entity("SneakerShop.DAL.Models.Entities.Size", b =>
                {
                    b.HasOne("SneakerShop.DAL.Models.Entities.GoodSubtype", "_GoodSubtype")
                        .WithMany("Sizes")
                        .HasForeignKey("GoodSubtypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("_GoodSubtype");
                });

            modelBuilder.Entity("SneakerShop.DAL.Models.Entities.AppUser", b =>
                {
                    b.Navigation("Basket");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("SneakerShop.DAL.Models.Entities.Discount", b =>
                {
                    b.Navigation("BasketElements");

                    b.Navigation("OrderedGoods");
                });

            modelBuilder.Entity("SneakerShop.DAL.Models.Entities.DiscountType", b =>
                {
                    b.Navigation("Discounts");
                });

            modelBuilder.Entity("SneakerShop.DAL.Models.Entities.Good", b =>
                {
                    b.Navigation("BasketElements");

                    b.Navigation("Discounts");

                    b.Navigation("OrderedGoods");
                });

            modelBuilder.Entity("SneakerShop.DAL.Models.Entities.GoodSubtype", b =>
                {
                    b.Navigation("Goods");

                    b.Navigation("Sizes");
                });

            modelBuilder.Entity("SneakerShop.DAL.Models.Entities.GoodType", b =>
                {
                    b.Navigation("GoodSubtypes");
                });

            modelBuilder.Entity("SneakerShop.DAL.Models.Entities.Manufacturer", b =>
                {
                    b.Navigation("Goods");
                });

            modelBuilder.Entity("SneakerShop.DAL.Models.Entities.Order", b =>
                {
                    b.Navigation("OrderedGoods");
                });

            modelBuilder.Entity("SneakerShop.DAL.Models.Entities.Size", b =>
                {
                    b.Navigation("BasketElements");

                    b.Navigation("OrderedGoods");
                });
#pragma warning restore 612, 618
        }
    }
}
